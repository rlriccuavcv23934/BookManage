<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ceLEiZPZ6f8joLTJ0CIdRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>